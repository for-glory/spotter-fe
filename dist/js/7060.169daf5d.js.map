{"version":3,"file":"js/7060.169daf5d.js","mappings":"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","sources":["webpack://spotter/./node_modules/@codetrix-studio/capacitor-google-auth/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class GoogleAuthWeb extends WebPlugin {\n    constructor() {\n        super();\n    }\n    loadScript() {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const scriptId = 'gapi';\n        const scriptEl = document === null || document === void 0 ? void 0 : document.getElementById(scriptId);\n        if (scriptEl) {\n            return;\n        }\n        const head = document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.defer = true;\n        script.async = true;\n        script.id = scriptId;\n        script.onload = this.platformJsLoaded.bind(this);\n        script.src = 'https://apis.google.com/js/platform.js';\n        head.appendChild(script);\n    }\n    initialize(_options = {\n        clientId: '',\n        scopes: [],\n        grantOfflineAccess: false,\n    }) {\n        var _a, _b;\n        if (typeof window === 'undefined') {\n            return;\n        }\n        const metaClientId = (_a = document.getElementsByName('google-signin-client_id')[0]) === null || _a === void 0 ? void 0 : _a.content;\n        const clientId = _options.clientId || metaClientId || '';\n        if (!clientId) {\n            console.warn('GoogleAuthPlugin - clientId is empty');\n        }\n        this.options = {\n            clientId,\n            grantOfflineAccess: (_b = _options.grantOfflineAccess) !== null && _b !== void 0 ? _b : false,\n            scopes: _options.scopes || [],\n        };\n        this.gapiLoaded = new Promise((resolve) => {\n            // HACK: Relying on window object, can't get property in gapi.load callback\n            window.gapiResolve = resolve;\n            this.loadScript();\n        });\n        this.addUserChangeListener();\n    }\n    platformJsLoaded() {\n        gapi.load('auth2', () => {\n            // https://github.com/CodetrixStudio/CapacitorGoogleAuth/issues/202#issuecomment-1147393785\n            const clientConfig = {\n                client_id: this.options.clientId,\n                plugin_name: 'CodetrixStudioCapacitorGoogleAuth',\n            };\n            if (this.options.scopes.length) {\n                clientConfig.scope = this.options.scopes.join(' ');\n            }\n            gapi.auth2.init(clientConfig);\n            window.gapiResolve();\n        });\n    }\n    async signIn() {\n        return new Promise(async (resolve, reject) => {\n            var _a;\n            try {\n                let serverAuthCode;\n                const needsOfflineAccess = (_a = this.options.grantOfflineAccess) !== null && _a !== void 0 ? _a : false;\n                if (needsOfflineAccess) {\n                    const offlineAccessResponse = await gapi.auth2.getAuthInstance().grantOfflineAccess();\n                    serverAuthCode = offlineAccessResponse.code;\n                }\n                else {\n                    await gapi.auth2.getAuthInstance().signIn();\n                }\n                const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n                if (needsOfflineAccess) {\n                    // HACK: AuthResponse is null if we don't do this when using grantOfflineAccess\n                    await googleUser.reloadAuthResponse();\n                }\n                const user = this.getUserFrom(googleUser);\n                user.serverAuthCode = serverAuthCode;\n                resolve(user);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    async refresh() {\n        const authResponse = await gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();\n        return {\n            accessToken: authResponse.access_token,\n            idToken: authResponse.id_token,\n            refreshToken: '',\n        };\n    }\n    async signOut() {\n        return gapi.auth2.getAuthInstance().signOut();\n    }\n    async addUserChangeListener() {\n        await this.gapiLoaded;\n        gapi.auth2.getAuthInstance().currentUser.listen((googleUser) => {\n            this.notifyListeners('userChange', googleUser.isSignedIn() ? this.getUserFrom(googleUser) : null);\n        });\n    }\n    getUserFrom(googleUser) {\n        const user = {};\n        const profile = googleUser.getBasicProfile();\n        user.email = profile.getEmail();\n        user.familyName = profile.getFamilyName();\n        user.givenName = profile.getGivenName();\n        user.id = profile.getId();\n        user.imageUrl = profile.getImageUrl();\n        user.name = profile.getName();\n        const authResponse = googleUser.getAuthResponse(true);\n        user.authentication = {\n            accessToken: authResponse.access_token,\n            idToken: authResponse.id_token,\n            refreshToken: '',\n        };\n        return user;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["GoogleAuthWeb","constructor","super","loadScript","document","scriptId","scriptEl","getElementById","head","getElementsByTagName","script","createElement","type","defer","async","id","onload","this","platformJsLoaded","bind","src","appendChild","initialize","_options","clientId","scopes","grantOfflineAccess","_a","_b","window","metaClientId","getElementsByName","content","console","warn","options","gapiLoaded","Promise","resolve","gapiResolve","addUserChangeListener","gapi","load","clientConfig","client_id","plugin_name","length","scope","join","auth2","init","reject","serverAuthCode","needsOfflineAccess","offlineAccessResponse","getAuthInstance","code","signIn","googleUser","currentUser","get","reloadAuthResponse","user","getUserFrom","error","authResponse","accessToken","access_token","idToken","id_token","refreshToken","signOut","listen","notifyListeners","isSignedIn","profile","getBasicProfile","email","getEmail","familyName","getFamilyName","givenName","getGivenName","getId","imageUrl","getImageUrl","name","getName","getAuthResponse","authentication"],"sourceRoot":""}