{"version":3,"file":"js/6212.cb141a14.js","mappings":"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","sources":["webpack://spotter/./node_modules/@capacitor/geolocation/dist/esm/index.js","webpack://spotter/./src/const/distance.ts","webpack://spotter/./src/trainers/store/selected-address.ts","webpack://spotter/./src/general/components/blocks/WheelPicker.vue?33ae","webpack://spotter/./src/general/components/blocks/WheelPicker.vue","webpack://spotter/./src/trainers/views/registration/LocationRate.vue?8f0c","webpack://spotter/./src/trainers/views/registration/LocationRate.vue"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst Geolocation = registerPlugin('Geolocation', {\n    web: () => import('./web').then(m => new m.GeolocationWeb()),\n});\nexport * from './definitions';\nexport { Geolocation };\n//# sourceMappingURL=index.js.map","import { PickerTypes } from \"@/ts/types/scroll-picker-types\";\n\nconst spacing = 15;\n\nexport const distance = () => {\n  return [...Array(spacing)]\n    .map((_, i) => i)\n    .reduce((acc: Array<PickerTypes>, cur) => {\n      acc.push({ text: String(cur + 1), value: String(++cur) });\n      return acc;\n    }, []);\n};\n","import { FacilitySearchResult } from \"@/interfaces/FacilitySearchResult\";\nimport { selectedAddressStoreTypes } from \"@/ts/types/store\";\nimport { defineStore } from \"pinia\";\n\nexport const useSelectedAddressStore = defineStore(\"seleted-address\", {\n  state: (): selectedAddressStoreTypes => {\n    return {\n      assignedFacility: null,\n      hourlyRate: null,\n      remoteHourlyRate: null,\n      travelRadius: null,\n      useTrainerLocation: false,\n      workingInGym: false,\n      edit: false,\n    };\n  },\n  actions: {\n    setEdit(value: boolean) {\n      this.edit = value;\n    },\n    setAssignedFacility(facility: FacilitySearchResult) {\n      this.assignedFacility = facility;\n    },\n    setWorkinginGym(val: boolean) {\n      this.workingInGym = val;\n    },\n    setHourlyRate(rate: number) {\n      this.hourlyRate = rate;\n    },\n    setRemoteHourlyRate(rate: number) {\n      this.remoteHourlyRate = rate;\n    },\n    setTravelRadius(radius: number | null) {\n      this.travelRadius = radius;\n    },\n    setUseTrainerLocation(value: boolean) {\n      this.useTrainerLocation = value;\n    },\n    clearState() {\n      this.assignedFacility = null;\n      this.hourlyRate = null;\n      this.remoteHourlyRate = null;\n      this.travelRadius = null;\n      this.useTrainerLocation = false;\n    },\n    clearAssignedFacility() {\n      this.assignedFacility = null;\n    },\n  },\n});\n","import { defineComponent as _defineComponent } from 'vue'\nimport { renderSlot as _renderSlot } from \"vue\"\n\nimport { withDefaults, inject, onUnmounted } from \"vue\";\nimport { pickerController, PickerOptions } from \"@ionic/vue\";\nimport { Emitter, EventType } from \"mitt\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WheelPicker',\n  props: {\n    options: {},\n    name: { default: \"\" },\n    values: {}\n  },\n  setup(__props: any) {\n\nconst props = __props;\n\n\n\nconst openPicker = async () => {\n  const values = props.values;\n  const columns = props.options.columns.map((column, index) => {\n    const options = column.options.map((option) => {\n      return {\n        value: option.value,\n        text: option.text,\n      };\n    });\n    return {\n      name: column.name,\n      options,\n      selectedIndex: values\n        ? column.options.findIndex((option) => option.value === values[index])\n        : -1,\n    };\n  });\n\n  const picker = await pickerController.create({\n    buttons: props.options.buttons,\n    mode: \"ios\",\n    columns,\n  });\n  await picker.present();\n};\n\nconst emitter: Emitter<Record<EventType, string>> | undefined =\n  inject(\"emitter\");\n\nemitter?.on(\"open-picker\", (name: string) => {\n  if (name === props.name) {\n    openPicker();\n  }\n});\n\nonUnmounted(() => {\n  emitter?.off(\"open-picker\");\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return _renderSlot(_ctx.$slots, \"button\")\n}\n}\n\n})","import script from \"./WheelPicker.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WheelPicker.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WheelPicker.vue?vue&type=style&index=0&id=98d5ce18&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-018f0b12\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"page\" }\nconst _hoisted_2 = { class: \"form-row\" }\nconst _hoisted_3 = { class: \"form-row\" }\nconst _hoisted_4 = { class: \"address-container\" }\nconst _hoisted_5 = { class: \"form-row\" }\nconst _hoisted_6 = { class: \"form-row\" }\nconst _hoisted_7 = { class: \"holder-button\" }\n\nimport {\n  IonButton,\n  IonLabel,\n  PickerColumnOption,\n  toastController,\n} from \"@ionic/vue\";\nimport BaseLayout from \"@/general/components/base/BaseLayout.vue\";\nimport PageHeader from \"@/general/components/blocks/headers/PageHeader.vue\";\nimport { useRouter } from \"vue-router\";\nimport WheelPicker from \"@/general/components/blocks/WheelPicker.vue\";\nimport { Emitter, EventType } from \"mitt\";\nimport { inject, ref, computed } from \"vue\";\nimport { distance } from \"@/const/distance\";\nimport { EntitiesEnum } from \"@/const/entities\";\nimport ChooseAddressModal from \"@/general/components/ChooseAddressModal.vue\";\n// import { State, IState, City, ICity } from \"country-state-city\";\nimport BaseToggle from \"@/general/components/base/BaseToggle.vue\";\nimport BaseInput from \"@/general/components/base/BaseInput.vue\";\nimport ChooseBlock from \"@/general/components/blocks/Choose.vue\";\nimport { Geolocation, Position } from \"@capacitor/geolocation\";\nimport { PositionLatLng } from \"@/ts/types/map\";\nimport { useSelectedAddressStore } from \"@/trainers/store/selected-address\";\nimport { useLazyQuery, useMutation } from \"@vue/apollo-composable\";\nimport {\n  CitiesDocument,\n  City,\n  SettingsCodeEnum,\n  State,\n  TrainerTypeEnum,\n  UpdateTrainerTypeDocument,\n  UpdateUserSettingsDocument,\n} from \"@/generated/graphql\";\nimport useId from \"@/hooks/useId\";\nimport { setSettings } from \"@/hooks/useSettings\";\nimport { ProfileSettings } from \"@/ts/enums/user\";\nimport {\n  NativeGeocoder,\n  NativeGeocoderResult,\n} from \"@awesome-cordova-plugins/native-geocoder\";\nimport { ChooseAddresModalResult } from \"@/interfaces/ChooseAddressModalOption\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LocationRate',\n  setup(__props) {\n\nconst router = useRouter();\n\nconst chooseAddressModal = ref<typeof ChooseAddressModal | null>(null);\nconst selectedState = ref<State | null>(null);\nconst selectedCity = ref<City | null>(null);\nconst selectedAddress = ref<NativeGeocoderResult | null>(null);\n\nconst onBack = () => {\n  store.clearState();\n  router.go(-1);\n};\n\nconst emitter: Emitter<Record<EventType, unknown>> | undefined =\n  inject(\"emitter\"); // Inject `emitter`\n\nconst openPicker = (name: string): void => {\n  emitter?.emit(\"open-picker\", name);\n};\n\nconst distances = distance();\n\nconst radiusPickerColums = [\n  {\n    name: \"radius\",\n    options: distances,\n  },\n  {\n    name: \"unit\",\n    options: [\n      {\n        text: \"MIL\",\n        value: \"miles\",\n      },\n    ],\n  },\n];\n\nconst startTimeOptions = {\n  columns: radiusPickerColums,\n  buttons: [\n    {\n      text: \"Cancel\",\n      role: \"cancel\",\n    },\n    {\n      text: \"Select radius\",\n      handler: (value: PickerColumnOption) => {\n        travelRadiusChange(value.radius?.value);\n      },\n    },\n  ],\n};\n\nconst chooseState = () => {\n  chooseAddressModal.value?.present({\n    type: EntitiesEnum.State,\n    title: \"Select state\",\n    selected: selectedState.value?.id,\n  });\n};\n\nconst chooseCity = () => {\n  chooseAddressModal.value?.present({\n    type: EntitiesEnum.City,\n    title: \"Select city\",\n    selected: selectedCity.value?.id,\n    state: selectedState.value,\n  });\n};\n\nconst gmapObjToNativeGeocoderResultObject = (gmObj: any) => {\n  let street_number =''\n  let route =''\n  const address:NativeGeocoderResult = {\n    latitude: gmObj.geometry.location.lat().toString(),\n    longitude: gmObj.geometry.location.lng().toString(),\n    countryCode: '',\n    countryName: '',\n    postalCode: '',\n    administrativeArea: '',\n    subAdministrativeArea: '',\n    locality: '',\n    subLocality: '',\n    thoroughfare: '',\n    subThoroughfare: '',\n    areasOfInterest: []\n  }\n  for (let i=0; i < gmObj.address_components.length; i++)\n  {\n    if(gmObj.address_components[i].types.includes(\"postal_code\"))\n    {\n      address.postalCode = gmObj.address_components[i].long_name;\n    }\n    if(gmObj.address_components[i].types.includes(\"locality\"))\n    {\n      address.locality = gmObj.address_components[i].long_name;\n    }\n    if(gmObj.address_components[i].types.includes(\"subLocality\"))\n    {\n      address.subLocality = gmObj.address_components[i].long_name;\n    }\n    if(gmObj.address_components[i].types.includes(\"country\"))\n    {\n      address.countryName = gmObj.address_components[i].long_name;\n      address.countryCode = gmObj.address_components[i].short_name;\n    }\n    if(gmObj.address_components[i].types.includes(\"administrative_area_level_1\"))\n    {\n      address.administrativeArea = gmObj.address_components[i].short_name;\n    }\n    if(gmObj.address_components[i].types.includes(\"administrative_area_level_2\"))\n    {\n      address.subAdministrativeArea = gmObj.address_components[i].long_name;\n    }\n    if(gmObj.address_components[i].types.includes(\"street_number\"))\n    {\n      street_number = gmObj.address_components[i].long_name;\n    }\n    if(gmObj.address_components[i].types.includes(\"route\"))\n    {\n      route = gmObj.address_components[i].long_name;\n    }\n  }\n  address.thoroughfare = street_number + \" \" + route\n  return address;\n}\nconst setPlace = (res: any) => {\n  if (res) {\n    selectedAddress.value = gmapObjToNativeGeocoderResultObject(res)\n  }\n}\n\nconst chooseAddress = () => {\n  chooseAddressModal.value?.present({\n    type: EntitiesEnum.Address,\n    title: \"Choose your address\",\n    selected: selectedAddress.value?.latitude\n      ? {\n          lat: Number(selectedAddress.value?.latitude),\n          lng: Number(selectedAddress.value?.longitude),\n        }\n      : null,\n    state: selectedState.value,\n    city: selectedCity.value,\n  });\n};\n\nconst addressSelected = async (selected: ChooseAddresModalResult) => {\n  selectedState.value = selected.state;\n  selectedCity.value = selected.city;\n  selectedAddress.value = selected.address;\n};\n\nconst store = useSelectedAddressStore();\n\nconst remoteHourlyRate = computed(() =>\n  store.remoteHourlyRate ? String(store.remoteHourlyRate / 100) : \"\"\n);\nconst remoteHourlyRateChange = (value: string) => {\n  store.setRemoteHourlyRate(Number(value) * 100);\n};\n\nconst travelRadius = computed(() => store.travelRadius);\nconst travelRadiusChange = (value: number | null) => {\n  store.setTravelRadius(value);\n};\n\nconst userCurrentLocation = ref<PositionLatLng>();\nconst useCurrentLocation = computed(() => {\n  const useTrainerLocation = store.useTrainerLocation;\n  if (useTrainerLocation) {\n    getUserLocation();\n  }\n  return useTrainerLocation;\n});\nconst getUserLocation = async () => {\n  try {\n    const myPosition: Position = await Geolocation.getCurrentPosition();\n    userCurrentLocation.value = {\n      lat: myPosition.coords.latitude,\n      lng: myPosition.coords.longitude,\n    };\n  } catch (error) {\n    store.setUseTrainerLocation(false);\n    const toast = await toastController.create({\n      message:\n        \"Failed to get your location. Check the permissions for the application.\",\n      duration: 2000,\n      icon: \"assets/icon/info.svg\",\n      cssClass: \"warning-toast\",\n    });\n    toast.present();\n    Geolocation.requestPermissions();\n  }\n};\nconst currentLocationToggleChanged = async (isCurrentLocation: boolean) => {\n  store.setUseTrainerLocation(isCurrentLocation);\n};\n\nconst {\n  loading,\n  mutate: updateTrainerType,\n  onDone: afterTrainerTypeUpdated,\n} = useMutation(UpdateTrainerTypeDocument);\n\nconst { load: getCities, refetch: getCityByName } = useLazyQuery(\n  CitiesDocument,\n  {\n    first: 15,\n    name: \"\",\n    state_code: \"\",\n  }\n);\n\ngetCities();\n\nconst saveAddress = async () => {\n  const { id } = useId();\n  const options = {\n    id,\n    trainer_type: TrainerTypeEnum.Freelancer,\n    settings: [\n      {\n        code: SettingsCodeEnum.UsePhoneLocation,\n        value: useCurrentLocation.value,\n      },\n      {\n        code: SettingsCodeEnum.TrainerRemoteDistance,\n        value: travelRadius.value,\n      },\n      {\n        code: SettingsCodeEnum.RemoteHourlyRate,\n        value: Number(remoteHourlyRate.value) * 100,\n      },\n    ],\n  };\n  if (!useCurrentLocation.value) {\n    if (selectedAddress.value?.locality) {\n      getCityByName({\n        first: 15,\n        name: selectedAddress.value?.locality,\n        state_code: selectedAddress.value?.administrativeArea,\n      })?.then(async (res) => {\n        const res_city = res.data.cities.data[0];\n        if (res_city) {\n          const address = {\n            lat: Number(selectedAddress.value?.latitude),\n            lng: Number(selectedAddress.value?.longitude),\n            street: `${selectedAddress.value?.thoroughfare} ${selectedAddress.value?.subThoroughfare}`,\n            extra: \"\",\n            city_id: res_city.id,\n          };\n\n          updateTrainerType({\n            ...options,\n            address,\n          });\n        }\n      });\n    }\n    \n  } else {\n    const address = {\n      ...userCurrentLocation.value,\n      extra: \"\",\n    };\n    if (userCurrentLocation.value?.lat && userCurrentLocation.value.lng) {\n      NativeGeocoder.reverseGeocode(\n        userCurrentLocation.value.lat,\n        userCurrentLocation.value.lng,\n        {\n          useLocale: false,\n          maxResults: 5,\n        }\n      )\n        .then((addresses: NativeGeocoderResult[]) => {\n          const city = addresses[0];\n          if (city?.locality) {\n            getCityByName({\n              first: 15,\n              name: city.locality,\n              state_code: city.administrativeArea,\n            })?.then(async (res) => {\n              const res_city = res.data.cities.data[0];\n              if (res_city) {\n                updateTrainerType({\n                  ...options,\n                  ...address,\n                  city_id: res_city.id,\n                  street: `${res_city.thoroughfare} ${res_city.subThoroughfare}`,\n                });\n              } else {\n                const toast = await toastController.create({\n                  message:\n                    \"Your address is outside the area. Try to choose manually.\",\n                  duration: 2000,\n                  icon: \"assets/icon/info.svg\",\n                  cssClass: \"warning-toast\",\n                });\n                toast.present();\n                store.setUseTrainerLocation(false);\n              }\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      const toast = await toastController.create({\n        message: \"Something went wrong. Try again.\",\n        duration: 2000,\n        icon: \"assets/icon/info.svg\",\n        cssClass: \"warning-toast\",\n      });\n      toast.present();\n      getUserLocation();\n    }\n  }\n};\n\nconst { mutate: updateUserSettings, onDone: settingsUpdated } = useMutation(\n  UpdateUserSettingsDocument\n);\n\nafterTrainerTypeUpdated(() => {\n  setSettings([{ isAddressSelected: true }]);\n\n  const { id } = useId();\n  const front_settings = localStorage.getItem(ProfileSettings.UserSettings);\n\n  updateUserSettings({\n    id,\n    front_settings,\n  });\n});\n\nsettingsUpdated(() => {\n  store.clearState();\n  router.push({ name: EntitiesEnum.TrainersExtraPersonal });\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_ion_text = _resolveComponent(\"ion-text\")!\n  const _component_GMapAutocomplete = _resolveComponent(\"GMapAutocomplete\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(BaseLayout, null, {\n      header: _withCtx(() => [\n        _createVNode(PageHeader, {\n          \"back-btn\": \"\",\n          onBack: onBack,\n          title: \"Location and Rate\"\n        })\n      ]),\n      content: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(BaseToggle, {\n              value: useCurrentLocation.value,\n              content: \"Use my current location\",\n              onChange: currentLocationToggleChanged\n            }, null, 8, [\"value\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createVNode(_unref(IonLabel), { class: \"label\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Location information\")\n              ]),\n              _: 1\n            }),\n            _createElementVNode(\"div\", _hoisted_4, [\n              _createVNode(_component_ion_text, { class: \"address-content\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" Address \")\n                ]),\n                _: 1\n              }),\n              (selectedAddress.value?.thoroughfare)\n                ? (_openBlock(), _createBlock(_component_ion_text, {\n                    key: 0,\n                    class: \"address-content\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(`${selectedAddress.value?.thoroughfare} ${selectedAddress.value?.subThoroughfare}`) + \", \" + _toDisplayString(`${selectedAddress.value?.locality}`) + \", \" + _toDisplayString(`${selectedAddress.value?.administrativeArea}`) + \", \" + _toDisplayString(`${selectedAddress.value?.countryName}`), 1)\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _createVNode(_component_GMapAutocomplete, {\n              placeholder: \"Enter your address\",\n              class: _normalizeClass([\"search-form__control\", {\n                'search-form__control--on-focus': _ctx.isFocused,\n              }]),\n              onPlace_changed: setPlace\n            }, null, 8, [\"class\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createVNode(_unref(IonLabel), { class: \"label\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Please set your travel or distance radius (1-15 miles) \")\n              ]),\n              _: 1\n            }),\n            _createVNode(WheelPicker, {\n              options: startTimeOptions,\n              name: \"radiusDistance\"\n            }, {\n              button: _withCtx(() => [\n                _createVNode(ChooseBlock, {\n                  title: \"Choose your travel radius\",\n                  onHandleClick: _cache[0] || (_cache[0] = ($event: any) => (openPicker('radiusDistance'))),\n                  value: travelRadius.value ? `${travelRadius.value} miles` : ''\n                }, null, 8, [\"value\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            _createVNode(_unref(IonLabel), { class: \"label\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Set your hourly rate for mobile training where you go to the client\\\" (USD $) \")\n              ]),\n              _: 1\n            }),\n            _createVNode(BaseInput, {\n              type: \"number\",\n              placeholder: \"Hourly Rate\",\n              value: remoteHourlyRate.value,\n              \"onUpdate:value\": _cache[1] || (_cache[1] = ($event: any) => ((remoteHourlyRate).value = $event)),\n              onChange: remoteHourlyRateChange\n            }, null, 8, [\"value\"])\n          ])\n        ])\n      ]),\n      footer: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createVNode(_unref(IonButton), {\n            expand: \"block\",\n            onClick: saveAddress,\n            disabled: \n            _unref(loading) ||\n            travelRadius.value === null ||\n            !remoteHourlyRate.value?.length ||\n            (!useCurrentLocation.value && !selectedAddress.value) ||\n            (useCurrentLocation.value && !userCurrentLocation.value)\n          \n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(\" Next \")\n            ]),\n            _: 1\n          }, 8, [\"disabled\"])\n        ])\n      ]),\n      _: 1\n    }),\n    _createVNode(ChooseAddressModal, {\n      ref_key: \"chooseAddressModal\",\n      ref: chooseAddressModal,\n      onSelect: addressSelected\n    }, null, 512)\n  ], 64))\n}\n}\n\n})","import script from \"./LocationRate.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LocationRate.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LocationRate.vue?vue&type=style&index=0&id=018f0b12&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-018f0b12\"]])\n\nexport default __exports__"],"names":["Geolocation","web","then","m","GeolocationWeb","spacing","distance","Array","map","_","i","reduce","acc","cur","push","text","String","value","useSelectedAddressStore","defineStore","state","assignedFacility","hourlyRate","remoteHourlyRate","travelRadius","useTrainerLocation","workingInGym","edit","actions","setEdit","this","setAssignedFacility","facility","setWorkinginGym","val","setHourlyRate","rate","setRemoteHourlyRate","setTravelRadius","radius","setUseTrainerLocation","clearState","clearAssignedFacility","_defineComponent","__name","props","options","name","default","values","setup","__props","openPicker","async","columns","column","index","option","selectedIndex","findIndex","picker","pickerController","create","buttons","mode","present","emitter","inject","on","onUnmounted","off","_ctx","_cache","_renderSlot","$slots","__exports__","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","router","useRouter","chooseAddressModal","ref","selectedState","selectedCity","selectedAddress","onBack","store","go","emit","distances","radiusPickerColums","startTimeOptions","role","handler","travelRadiusChange","gmapObjToNativeGeocoderResultObject","gmObj","street_number","route","address","latitude","geometry","location","lat","toString","longitude","lng","countryCode","countryName","postalCode","administrativeArea","subAdministrativeArea","locality","subLocality","thoroughfare","subThoroughfare","areasOfInterest","address_components","length","types","includes","long_name","short_name","setPlace","res","addressSelected","selected","city","computed","remoteHourlyRateChange","Number","userCurrentLocation","useCurrentLocation","getUserLocation","myPosition","getCurrentPosition","coords","error","toast","toastController","message","duration","icon","cssClass","requestPermissions","currentLocationToggleChanged","isCurrentLocation","loading","mutate","updateTrainerType","onDone","afterTrainerTypeUpdated","useMutation","UpdateTrainerTypeDocument","load","getCities","refetch","getCityByName","useLazyQuery","CitiesDocument","first","state_code","saveAddress","id","useId","trainer_type","TrainerTypeEnum","Freelancer","settings","code","SettingsCodeEnum","UsePhoneLocation","TrainerRemoteDistance","RemoteHourlyRate","extra","NativeGeocoder","reverseGeocode","useLocale","maxResults","addresses","res_city","data","cities","city_id","street","catch","console","log","updateUserSettings","settingsUpdated","UpdateUserSettingsDocument","setSettings","isAddressSelected","front_settings","localStorage","getItem","ProfileSettings","UserSettings","EntitiesEnum","TrainersExtraPersonal","_component_ion_text","_resolveComponent","_component_GMapAutocomplete","_openBlock","_createElementBlock","_Fragment","_createVNode","BaseLayout","header","_withCtx","PageHeader","title","content","_createElementVNode","BaseToggle","onChange","_unref","IonLabel","_createTextVNode","_createBlock","key","_toDisplayString","_createCommentVNode","placeholder","_normalizeClass","isFocused","onPlace_changed","WheelPicker","button","ChooseBlock","onHandleClick","$event","BaseInput","type","footer","IonButton","expand","onClick","disabled","ChooseAddressModal","ref_key","onSelect"],"sourceRoot":""}