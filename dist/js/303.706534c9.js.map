{"version":3,"file":"js/303.706534c9.js","mappings":"mLACO,MAAMA,UAAyB,KAClCC,cACIC,MAAM,CACFC,KAAM,gBACNC,UAAW,CAAC,QAEpB,CACAC,WAAWC,GACP,MAAMC,EAAiB,CAAEC,QAAS,SAClC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,IACI,OAAOC,KAAKC,WAAWP,EAAQQ,QAAQC,MAAK,KACxCC,GAAGC,KAAKC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGZ,GAAiBD,IACzDI,GAAS,GAEjB,CACA,MAAOU,GACHT,EAAOS,EACX,IAER,CACAP,WAAWC,GACP,GAAwB,qBAAbO,SACP,OAAOZ,QAAQC,UAEnB,MAAMY,EAAW,KACXC,EAAwB,OAAbF,eAAkC,IAAbA,cAAsB,EAASA,SAASG,eAAeF,GAC7F,GAAIC,EACA,OAAOd,QAAQC,UAEnB,MAAMe,EAAOJ,SAASK,qBAAqB,QAAQ,GAC7CC,EAASN,SAASO,cAAc,UACtC,OAAO,IAAInB,SAAQC,IACfiB,EAAOE,OAAQ,EACfF,EAAOG,OAAQ,EACfH,EAAOI,GAAKT,EACZK,EAAOK,OAAS,KACZtB,GAAS,EAEbiB,EAAOM,IAAM,gCAA2C,OAAXnB,QAA8B,IAAXA,EAAoBA,EAAS,iBAC7FW,EAAKS,YAAYP,EAAO,GAEhC,CACAG,YAAYxB,GAER,OADA6B,QAAQC,IAAI,yBAA0B9B,GAC/B,IAAIG,SAAQ,CAACC,EAASC,KACzBK,GAAGqB,OAAMC,IACLH,QAAQI,MAAM,WAAYD,GACF,cAApBA,EAASE,OACT9B,EAAQ,CACJ+B,YAAa,CACTC,MAAOJ,EAASK,aAAaF,eAKrC9B,EAAO,CACH8B,YAAa,CACTC,MAAO,OAGnB,GACD,CAAEE,MAAOtC,EAAQuC,YAAYC,KAAK,MAAO,GAEpD,CACAhB,eACI,OAAO,IAAIrB,SAAQC,IACfM,GAAG+B,QAAO,IAAMrC,KAAU,GAElC,CACAoB,oBACI,OAAO,IAAIrB,SAAQC,IACfM,GAAGgC,aAAYC,GAAMvC,EAAQuC,IAAI,GAEzC,CACAnB,8BACI,OAAO,IAAIrB,SAAQ,CAACC,EAASC,KACzBK,GAAGkC,gBAAeZ,IACd,GAAwB,cAApBA,EAASE,OAAwB,CACjC,MAAMW,EAAS,CACXV,YAAa,CACTW,mBAAeC,EACfC,oBAAqB,GACrBC,aAASF,EACTG,eAAWH,EACXI,iBAAaJ,EACbR,YAAa,GACbH,MAAOJ,EAASK,aAAaF,YAC7BiB,OAAQpB,EAASK,aAAagB,SAGtCjD,EAAQyC,EACZ,MAEIxC,EAAO,CACH8B,YAAa,CACTC,MAAO,OAGnB,GACF,GAEV,CACAZ,iBAAiBxB,GACb,MAAMsD,EAAStD,EAAQsD,OAAOd,KAAK,KACnC,OAAO,IAAIrC,SAAQ,CAACC,EAASC,KACzBK,GAAG6C,IAAI,MAAO,CAAED,WAAUtB,IAClBA,EAASwB,MACTnD,EAAO2B,EAASwB,MAAMC,SAG1BrD,EAAQ4B,EAAS,GACnB,GAEV,E","sources":["webpack://spotter/./node_modules/@capacitor-community/facebook-login/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class FacebookLoginWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'FacebookLogin',\n            platforms: ['web'],\n        });\n    }\n    initialize(options) {\n        const defaultOptions = { version: 'v10.0' };\n        return new Promise((resolve, reject) => {\n            try {\n                return this.loadScript(options.locale).then(() => {\n                    FB.init(Object.assign(Object.assign({}, defaultOptions), options));\n                    resolve();\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    loadScript(locale) {\n        if (typeof document === 'undefined') {\n            return Promise.resolve();\n        }\n        const scriptId = 'fb';\n        const scriptEl = document === null || document === void 0 ? void 0 : document.getElementById(scriptId);\n        if (scriptEl) {\n            return Promise.resolve();\n        }\n        const head = document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n        return new Promise(resolve => {\n            script.defer = true;\n            script.async = true;\n            script.id = scriptId;\n            script.onload = () => {\n                resolve();\n            };\n            script.src = `https://connect.facebook.net/${locale !== null && locale !== void 0 ? locale : 'en_US'}/sdk.js`;\n            head.appendChild(script);\n        });\n    }\n    async login(options) {\n        console.log('FacebookLoginWeb.login', options);\n        return new Promise((resolve, reject) => {\n            FB.login(response => {\n                console.debug('FB.login', response);\n                if (response.status === 'connected') {\n                    resolve({\n                        accessToken: {\n                            token: response.authResponse.accessToken,\n                        },\n                    });\n                }\n                else {\n                    reject({\n                        accessToken: {\n                            token: null,\n                        },\n                    });\n                }\n            }, { scope: options.permissions.join(',') });\n        });\n    }\n    async logout() {\n        return new Promise(resolve => {\n            FB.logout(() => resolve());\n        });\n    }\n    async reauthorize() {\n        return new Promise(resolve => {\n            FB.reauthorize(it => resolve(it));\n        });\n    }\n    async getCurrentAccessToken() {\n        return new Promise((resolve, reject) => {\n            FB.getLoginStatus(response => {\n                if (response.status === 'connected') {\n                    const result = {\n                        accessToken: {\n                            applicationId: undefined,\n                            declinedPermissions: [],\n                            expires: undefined,\n                            isExpired: undefined,\n                            lastRefresh: undefined,\n                            permissions: [],\n                            token: response.authResponse.accessToken,\n                            userId: response.authResponse.userID,\n                        },\n                    };\n                    resolve(result);\n                }\n                else {\n                    reject({\n                        accessToken: {\n                            token: null,\n                        },\n                    });\n                }\n            });\n        });\n    }\n    async getProfile(options) {\n        const fields = options.fields.join(',');\n        return new Promise((resolve, reject) => {\n            FB.api('/me', { fields }, response => {\n                if (response.error) {\n                    reject(response.error.message);\n                    return;\n                }\n                resolve(response);\n            });\n        });\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["FacebookLoginWeb","constructor","super","name","platforms","initialize","options","defaultOptions","version","Promise","resolve","reject","this","loadScript","locale","then","FB","init","Object","assign","err","document","scriptId","scriptEl","getElementById","head","getElementsByTagName","script","createElement","defer","async","id","onload","src","appendChild","console","log","login","response","debug","status","accessToken","token","authResponse","scope","permissions","join","logout","reauthorize","it","getLoginStatus","result","applicationId","undefined","declinedPermissions","expires","isExpired","lastRefresh","userId","userID","fields","api","error","message"],"sourceRoot":""}